from distutils.core import setup, Extension
from os.path import basename

include_dirs = '${INCLUDE_DIRS}'.split(";")
libraries = [ 'OpenCL' ]
library_dirs = ['${PROJECT_BINARY_DIR}/lib']
extra_library_dirs = "$ENV{LD_LIBRARY_PATH}".split(":")
if extra_library_dirs:
    library_dirs += extra_library_dirs
library_dirs = [ x for x in library_dirs if len(x) > 0 ]

static_libs = []

boost_libraries = "${BOOST_COMPONENTS}".split(";")
for boost_lib in boost_libraries:
    libraries.append("boost_" + boost_lib)

# boost_numpy -- TODO: portability
static_libs.append("${PROJECT_BINARY_DIR}/lib/libboost_numpy.a")

extra_compile_args=[] #["-std=c++11","-g3"] # +"${CMAKE_CXX_FLAGS}".split(" ")
define_macros=[
#    ("VIENNACL_DEBUG_BUILD", None),
#    ("VIENNACL_DEBUG_ALL", None),
    ("VIENNACL_WITH_UBLAS", None),
    ("VIENNACL_WITH_OPENCL", None),
]              
undef_macros=[]

submodules = ["core",
              "vector_float", "vector_double", "vector_int", "vector_long", "vector_uint", "vector_ulong",
              "dense_matrix_float", "dense_matrix_double", "dense_matrix_int", "dense_matrix_long", "dense_matrix_uint", "dense_matrix_ulong",
              "compressed_matrix", "coordinate_matrix", "ell_matrix", "hyb_matrix",
              "direct_solvers", "iterative_solvers", "eig",
              "extra_functions",
              "scheduler"]

ext_modules = []
ext_module_files = []
for submodule in submodules:
    ext_module_files.append("${CMAKE_CURRENT_SOURCE_DIR}/src/_viennacl/" + submodule + ".cpp")
ext_modules.append(Extension("_viennacl", ext_module_files,
                             depends=["${CMAKE_CURRENT_SOURCE_DIR}/src/_viennacl/viennacl.h"],
                             extra_compile_args=extra_compile_args,
                             define_macros=define_macros, undef_macros=undef_macros,
                             include_dirs=include_dirs, library_dirs=library_dirs,
                             extra_link_args=static_libs, libraries=libraries))


if __name__=="__main__":
    setup( name="pyviennacl",
           version="${VERSION}",
           packages=["pyviennacl"],
#                     "pyviennacl._viennacl"],
           package_dir={'pyviennacl': "${CMAKE_CURRENT_SOURCE_DIR}/src/pyviennacl"},
#                        'pyviennacl._viennacl': "${CMAKE_CURRENT_SOURCE_DIR}/src/_viennacl"},
           ext_package="pyviennacl",
           ext_modules=ext_modules)

